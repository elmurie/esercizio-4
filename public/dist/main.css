[data-simplebar] {
  position: relative;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-content: flex-start;
  align-items: flex-start;
}

.simplebar-wrapper {
  overflow: hidden;
  width: inherit;
  height: inherit;
  max-width: inherit;
  max-height: inherit;
}

.simplebar-mask {
  direction: inherit;
  position: absolute;
  overflow: hidden;
  padding: 0;
  margin: 0;
  left: 0;
  top: 0;
  bottom: 0;
  right: 0;
  width: auto !important;
  height: auto !important;
  z-index: 0;
}

.simplebar-offset {
  direction: inherit !important;
  box-sizing: inherit !important;
  resize: none !important;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  padding: 0;
  margin: 0;
  -webkit-overflow-scrolling: touch;
}

.simplebar-content-wrapper {
  direction: inherit;
  box-sizing: border-box !important;
  position: relative;
  display: block;
  height: 100%;
  /* Required for horizontal native scrollbar to not appear if parent is taller than natural height */
  width: auto;
  max-width: 100%;
  /* Not required for horizontal scroll to trigger */
  max-height: 100%;
  /* Needed for vertical scroll to trigger */
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.simplebar-content-wrapper::-webkit-scrollbar,
.simplebar-hide-scrollbar::-webkit-scrollbar {
  width: 0;
  height: 0;
}

.simplebar-content:before,
.simplebar-content:after {
  content: " ";
  display: table;
}

.simplebar-placeholder {
  max-height: 100%;
  max-width: 100%;
  width: 100%;
  pointer-events: none;
}

.simplebar-height-auto-observer-wrapper {
  box-sizing: inherit !important;
  height: 100%;
  width: 100%;
  max-width: 1px;
  position: relative;
  float: left;
  max-height: 1px;
  overflow: hidden;
  z-index: -1;
  padding: 0;
  margin: 0;
  pointer-events: none;
  flex-grow: inherit;
  flex-shrink: 0;
  flex-basis: 0;
}

.simplebar-height-auto-observer {
  box-sizing: inherit;
  display: block;
  opacity: 0;
  position: absolute;
  top: 0;
  left: 0;
  height: 1000%;
  width: 1000%;
  min-height: 1px;
  min-width: 1px;
  overflow: hidden;
  pointer-events: none;
  z-index: -1;
}

.simplebar-track {
  z-index: 1;
  position: absolute;
  right: 0;
  bottom: 0;
  pointer-events: none;
  overflow: hidden;
}

[data-simplebar].simplebar-dragging .simplebar-content {
  pointer-events: none;
  -moz-user-select: none;
   -ms-user-select: none;
       user-select: none;
  -webkit-user-select: none;
}

[data-simplebar].simplebar-dragging .simplebar-track {
  pointer-events: all;
}

.simplebar-scrollbar {
  position: absolute;
  left: 0;
  right: 0;
  min-height: 10px;
}

.simplebar-scrollbar:before {
  position: absolute;
  content: "";
  background: black;
  border-radius: 7px;
  left: 2px;
  right: 2px;
  opacity: 0;
  transition: opacity 0.2s linear;
}

.simplebar-scrollbar.simplebar-visible:before {
  /* When hovered, remove all transitions from drag handle */
  opacity: 0.5;
  transition: opacity 0s linear;
}

.simplebar-track.simplebar-vertical {
  top: 0;
  width: 11px;
}

.simplebar-track.simplebar-vertical .simplebar-scrollbar:before {
  top: 2px;
  bottom: 2px;
}

.simplebar-track.simplebar-horizontal {
  left: 0;
  height: 11px;
}

.simplebar-track.simplebar-horizontal .simplebar-scrollbar:before {
  height: 100%;
  left: 2px;
  right: 2px;
}

.simplebar-track.simplebar-horizontal .simplebar-scrollbar {
  right: auto;
  left: 0;
  top: 2px;
  height: 7px;
  min-height: 0;
  min-width: 10px;
  width: auto;
}

/* Rtl support */
[data-simplebar-direction=rtl] .simplebar-track.simplebar-vertical {
  right: auto;
  left: 0;
}

.hs-dummy-scrollbar-size {
  direction: rtl;
  position: fixed;
  opacity: 0;
  visibility: hidden;
  height: 500px;
  width: 500px;
  overflow-y: hidden;
  overflow-x: scroll;
}

.simplebar-hide-scrollbar {
  position: fixed;
  left: 0;
  visibility: hidden;
  overflow-y: scroll;
  scrollbar-width: none;
  -ms-overflow-style: none;
}
@charset "UTF-8";
/* ------ getting values from a map with alert ----- */
/* ===BASELINE=== */
/**
 * Ref: http://www.modularscale.com/
 */
/* ===REM FUNCTION=== */
/**
 * Sassy functions to get the rem equivalent of a px value
 * preset-css-env will take care of fallback for older browsers
 * !NOTE: you only need to change the $rem-baseline value if your base size
 * is different from 10px (use _var_typography.scss in case)
 * @param value is referred to px
 * Credits: Rowan Manning
 */
/**
 * Ref: https://www.smashingmagazine.com/2014/06/sassy-z-index-management-for-complex-layouts/
 * In order to maintain the stacking order of the elements,
 * we can set up a Sass list which represents the order in which we want our elements to appear,
 * from lowest to highest, like shown below.
 * (Note that if we want to add an element to the existing stacking order,
 * we just have to update the list with our new element)
 * In order to retrieve the z-index value to assign to each element,
 * you can use the index() sass function, for i.e. .modal {z-index: index($elements, modal)}
 */
/**
 * To make to solution scalable across the website, you can add multiple lists, related to specific contexts.
 * Remember that CSS spec informs us that
 * “stacking contexts are generated by any positioned element
 * (including relatively positioned elements) having a computed value of ‘z-index’ other than ‘auto’”,
 * so stick to this spec if you want to create a new stacking context.
 */
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
  text-decoration: none;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

* {
  box-sizing: border-box;
}

figure, img, picture {
  margin: 0;
  padding: 0;
}

img {
  width: 100%;
  max-width: 100%;
}

:root {
  --grid-gap: 20;
  --main-container-pad-x: 20;
}

@media screen and (min-width: 992px) {
  :root {
    --main-container-pad-x: 30;
  }
}
:root {
  --color-primary: #000000;
}

:root {
  --color-secondary: #ffffff;
}

:root {
  --color-tertiary: #727C8B;
}

:root {
  --color-light: #ffffff;
}

:root {
  --color-smoke-light: #F5F5F5;
}

:root {
  --color-smoke-gray: #727C8B;
}

:root {
  --color-gray: #808080;
}

:root {
  --color-dark-gray: #3f4650;
}

:root {
  --color-dark: #2B2B2B;
}

:root {
  --color-text-light: #ffffff;
}

:root {
  --color-text-dark: #1C1C1C;
}

:root {
  --color-text-gray: #727C8B;
}

:root {
  --color-black: #000000;
}

:root {
  --color-success: #00a905;
}

:root {
  --color-warning: #fa6700;
}

:root {
  --color-error: #B30E12;
}

.button--text, .button--secondary, .button--primary {
  display: inline-block;
  padding: 1.5rem 2rem;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: 1px solid transparent;
  border-radius: 2px;
  font-size: 1.4rem;
  min-width: 13rem;
  min-height: 4.3rem;
  text-decoration: none;
  text-align: center;
  cursor: pointer;
}
.button--text:hover, .button--secondary:hover, .button--primary:hover {
  text-decoration: none;
}
[data-default-label].button--text, [data-default-label].button--secondary, [data-default-label].button--primary {
  display: flex;
  align-items: center;
  justify-content: center;
}
[data-default-label].button--text:before, [data-default-label].button--secondary:before, [data-default-label].button--primary:before {
  content: attr(data-default-label);
  display: block;
}
[data-default-label].button--text:disabled:before, [data-default-label].button--secondary:disabled:before, [data-default-label].button--primary:disabled:before {
  content: attr(data-disabled-label);
}
.button--large.button--text, .button--large.button--secondary, .button--large.button--primary {
  min-width: 26.5rem;
  height: 5rem;
}
.button--wide.button--text, .button--wide.button--secondary, .button--wide.button--primary {
  width: 100%;
}
.stroked.button--text, .stroked.button--secondary, .stroked.button--primary {
  border-color: currentColor;
}
.button--text:disabled, .button--secondary:disabled, .button--primary:disabled {
  opacity: 0.6;
  cursor: default;
  background-color: #808080;
  color: #ffffff;
}

button {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  background: transparent;
  padding: 0;
  margin: 0;
  cursor: pointer;
}
button:focus {
  outline: none;
}

.button--primary {
  text-transform: uppercase;
  background: #000000;
  color: #ffffff;
  font-weight: lighter;
}
.button--primary:hover {
  color: #ffffff;
}
.button--primary:hover:not([disabled]) {
  background: #262626;
}
.button--secondary {
  text-transform: uppercase;
  background: #ffffff;
  color: #1C1C1C;
}
.button--secondary:hover {
  color: #ffffff;
}
.button--secondary:hover:not([disabled]) {
  background: #262626;
}
.button--text {
  background: transparent;
  color: #1C1C1C;
  text-decoration: underline;
}

.svg-hamburger .line-top,
.svg-hamburger .line-center,
.svg-hamburger .line-bottom {
  transform-origin: center;
  transition: transform 0.7s ease-in-out;
}
.svg-hamburger .line-top {
  transform: translateY(-25%);
}
.svg-hamburger .line-bottom {
  transform: translateY(25%);
}
.svg-hamburger.open-status .line-top {
  transform: rotate(45deg);
}
.svg-hamburger.open-status .line-center {
  transform: scale(0);
}
.svg-hamburger.open-status .line-bottom {
  transform: rotate(-45deg);
}

/*
SWATCH COLOR (circle)
<div class="swatch-color">
    <div class="swatch-color__box">
        <img src="" alt="swatch-img" title="dark-cosmo">
    </div>
</div>
*/
.swatch-color {
  --swatch-size: 3.3rem;
  --swatch-color-size: 2.7rem;
  width: var(--swatch-size);
  height: var(--swatch-size);
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  border: 1px solid transparent;
}
.swatch-color__box {
  width: var(--swatch-color-size);
  height: var(--swatch-color-size);
  overflow: hidden;
  border-radius: 50%;
  border: 1px solid;
}
.swatch-color.selected {
  border-color: #808080;
}

/*
SIZE OPTION
It's a size input selector GENERALLY AT PDPages
<label class="size-option">
    <input type="radio" data-size-option="38" name="id" value="option-value">
    <span class="size-option__box">
        <span class="size-option__box__label">
            38
        </span>
    </span>
</label>
*/
.size-option {
  --size-option: 4rem;
  --border-box-color: transparent;
  --size-text-decoration: none;
  font-size: 1.4rem;
  cursor: pointer;
}
.size-option input {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
}
.size-option input:checked ~ * {
  --size-text-decoration: underline;
  font-weight: bold;
}
.size-option__box {
  width: var(--size-option);
  height: var(--size-option);
  border: 1px solid var(--border-box-color);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}
.size-option__box__label {
  -webkit-text-decoration: var(--size-text-decoration);
          text-decoration: var(--size-text-decoration);
}

/*Icon svg wrapped into .icon element */
.icon {
  display: inline-block;
  width: 2.4rem;
  height: 2.4rem;
}
@media screen and (min-width: 992px) {
  .icon {
    width: 2.6rem;
    height: 2.6rem;
  }
}
.icon svg {
  display: block;
  width: 100%;
  height: 100%;
}

/* PLACEHOLDERS */
input[type=text],
input[type=email],
input[type=password],
input[type=number],
input[type=date],
input[type=tel],
select {
  height: 4rem;
  width: 100%;
  padding: 0.5rem 1rem;
  outline: none;
  border: 1px solid #808080;
  font-size: 1.4rem;
}

select,
textarea {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  width: 100%;
}

textarea {
  width: 100%;
  min-height: 20rem;
  resize: none;
}

.form-field,
.inline-form-field {
  margin-bottom: 1.4rem;
}
.form-field label,
.inline-form-field label {
  font-size: 1.4rem;
}
.form-field.acceptance,
.inline-form-field.acceptance {
  display: flex;
}
.form-field.acceptance .acceptance__text,
.inline-form-field.acceptance .acceptance__text {
  font-size: 1.2rem;
}
.form-field.acceptance .custom-checkbox,
.inline-form-field.acceptance .custom-checkbox {
  margin-right: 1.5rem;
}
.form-field.hidden,
.inline-form-field.hidden {
  display: none;
}
.form-field.error,
.inline-form-field.error {
  color: red;
}
.form-field.error .error-msg,
.inline-form-field.error .error-msg {
  font-size: 1.2rem;
  margin: 1rem auto;
}

/* CUSTOM INPUTS */
/* CUSTOM CHECKBOX

<label class="custom-checkbox">
    <input type="checkbox" name="input_name">
    <span class="checkbox">
        <span class="checkbox__check"></span>
    </span>
</label>
*/
.custom-checkbox {
  --custom-check-bg: #ffffff;
  --custom-check-opacity: 0;
  display: inline-block;
  width: 2.5rem;
  height: 2.5rem;
  position: relative;
  color: #808080;
}
.custom-checkbox input {
  opacity: 0;
  position: absolute;
  top: 0;
  left: 0;
}
.custom-checkbox input:checked ~ .checkbox {
  --custom-check-opacity: 1;
}
.custom-checkbox .checkbox {
  width: 100%;
  height: 100%;
  color: inherit;
  border: 1px solid currentColor;
  background: var(--custom-check-bg);
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}
.custom-checkbox .checkbox__check {
  opacity: var(--custom-check-opacity);
  width: 50%;
  height: 90%;
  border: 4px solid currentColor;
  border-left: none;
  border-top: none;
  transform: translate(0%, -10%) rotate(45deg) scale(0.8);
}

/*CUSTOM SELECT*/
/*TODO Check || improve */
.custom-select-input, .custom-select-input--white {
  position: relative;
}
.custom-select-input .arrow-down, .custom-select-input--white .arrow-down {
  position: absolute;
  width: 100%;
  height: 100%;
  padding: 0 1rem;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  color: #000000;
  pointer-events: none;
}
.custom-select-input .arrow-down:after, .custom-select-input--white .arrow-down:after {
  border-style: solid;
  border-width: 1px 1px 0 0;
  content: "";
  display: inline-block;
  height: 7px;
  margin: 0 7px;
  position: relative;
  transform: rotate(135deg);
  vertical-align: middle;
  width: 7px;
}
.custom-select-input select, .custom-select-input--white select {
  width: 100%;
  color: #000000;
}
.custom-select-input--white .arrow-down {
  color: white;
}
.custom-select-input--white select {
  background: transparent;
  color: white;
  border-color: white;
}

* {
  box-sizing: border-box;
}

html {
  background: #ffffff;
  color: #000000;
  line-height: 1.4;
}

body {
  margin: 0;
  width: 100%;
}

h1 {
  text-align: center;
}

html {
  box-sizing: border-box;
  /**
   * We are assuming to be dealing with a browser set to ‘medium’ text.
   * The default size for ‘medium’ text in all modern browsers is 16px
   * We'll be using rem unit throughout the project, this meaning that
   * if you need to reduce the base font size for the entire document
   * you can simply edit this percentage value.
   * Ref: https://snook.ca/archives/html_and_css/font-size-with-rem
   */
  font-size: 62.5%;
}
html *,
html *:before,
html *:after {
  /**
   * Use inheritance here in order to make easier
   * to change the box-sizing in plugins or other components that leverage other behavior.
   * Credits: Jonathan Neal http://blog.teamtreehouse.com/box-sizing-secret-simple-css-layouts#comment-50223
   */
  box-sizing: inherit;
}
html .loading,
html .loading-cta {
  cursor: wait !important;
}

body {
  box-sizing: border-box;
  line-height: 1.3;
  color: #000000;
  font-weight: normal;
  font-family: "Nunito Sans", sans-serif;
  letter-spacing: 0.5px;
  overflow-x: hidden;
  -webkit-font-smoothing: antialiased;
  position: relative;
}

a {
  color: currentColor;
}
a:hover {
  color: currentColor;
}

img {
  display: inline-block;
  max-width: 100%;
}

figure {
  margin: 0;
}

picture {
  display: inline-block;
}

ul,
li {
  margin: 0;
  padding: 0;
  list-style: none;
}

.list-default {
  margin: 0;
  padding: 0;
  list-style: none;
}

#print-template {
  display: none;
}

/* FROM MODULES */
/*GLIDE*/
.glide {
  position: relative;
  width: 100%;
  box-sizing: border-box;
}
.glide * {
  box-sizing: inherit;
}
.glide__track {
  overflow: hidden;
}
.glide__slides {
  position: relative;
  width: 100%;
  list-style: none;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  transform-style: preserve-3d;
  touch-action: pan-Y;
  overflow: hidden;
  margin: 0;
  padding: 0;
  white-space: nowrap;
  display: flex;
  flex-wrap: nowrap;
  will-change: transform;
}
.glide__slides--dragging {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.glide__slide {
  width: 100%;
  height: 100%;
  flex-shrink: 0;
  white-space: normal;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
}
.glide__slide a {
  -webkit-user-select: none;
          user-select: none;
  -webkit-user-drag: none;
  -moz-user-select: none;
  -ms-user-select: none;
}
.glide__arrows {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.glide__bullets {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.glide--rtl {
  direction: rtl;
}

/* SIMPLEBAR */
/* SOME OTHER VENDOR INTO current 'vendors' dir */
.some-vendor {
  background: red;
}

/* COMMONS COMPONENTS/LAYOUTS TO BE COMPILED INTO main.css and not as chunks */
.c-header {
  background: red;
}

.c-footer {
  background: green;
}

html,
body {
  width: 100%;
  height: 100%;
}

body {
  margin: 0;
  padding: 0;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
body.body-blocked {
  overflow: hidden;
  touch-action: none;
  -ms-touch-action: none;
  position: relative;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/